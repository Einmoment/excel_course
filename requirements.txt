одностраничное подключение

Webpack (imports/exports)- реализовать
    это сборщик проета (один файл JS) обрабатывает различные форматы
    Babel - транспайлер JS из новыз версий в старые
    Scss(препроцессор верстки) чтоб его поддерживал Webpack
    Elsint (следит за чистотой кода)
        - 2 mods
        - Dev
            Dev Server (перезагружать окно браузера если произошли изменения в коде),
            SourseMaps (Исходные карты - для Scss файлов + будет указывать модули, где вели разработку), 
            Eslint (чистота и содежание кода в одном стиле), 
            Not Minifind Js & CSS (важно понимать как код выглядит. минификация занимает много времени...)
        - Prod
            Minifind (наоборот нужно для минификации кода)
Git - создать
    версионность приложения
    (научться работать с gitflow)
    допустим есть проект - нужно внедрить рекламу для аудиотреков или другую фичу
    но человек всегда допускает ошибки, и если допустит в рабочей единичной версии
    во время разработки никогда не заливаем на продакшн версию(что видит конечный пользователь)
    
    Production - для пользователя
        1.0.0
        0--------
    Development - разрабоатыввется
        1.0.2
        1(координальное измененеие).0(серьезное измененеие).2 (небольшие изменения)
        1----------- + -- (после PR и после ветка 2 удаляется)                                    PR (pool reques) запрос на совмещение - но это не означает что етки будут совмещены. (и на этом этапе другие разрабы смотрят что там сделано и как либо соглашаются либо коментирую (как лучше сделать))
        2------------- (разрабатывает фичу тут), после окончания собмещает с основным девелопентом | 
        если человек будет работать в этой версии(будет неразбириха так как работает много людей)
        он создает копию (2)
        далее - 1.0.2 сливается(когда закончено) - сливается в продакшн 